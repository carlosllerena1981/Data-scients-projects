#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas


# In[2]:


s1= pandas.Series([10,20,30])


# In[3]:


s1


# In[4]:


s1= pandas.Series([10,20,30], index=[1,2,3])


# In[5]:


s1


# In[6]:


s1**2


# In[7]:


s1=pandas.Series(list('abcd'))


# In[8]:


s1


# In[9]:


s1=pandas.Series(tuple('abcd'))


# In[10]:


s1


# In[12]:


s1=pandas.Series(range(5), index=list('xyzxy'))


# In[13]:


s1


# In[16]:


s1['x']


# In[15]:


s1


# In[17]:


s1=pandas.Series(range(5), index=list('xyzxy'))


# In[18]:


s1


# In[19]:


s1['x']


# In[20]:


s1=pandas.Series(['Hadoop','Spark','Cassandra'], index=[1,3,5])


# In[21]:


s1


# In[22]:


s1.reindex(range(6))


# In[23]:


s1.reindex(range(6), fill_value= 'Missing Data')


# In[24]:


s1=pandas.Series(['10','20','30'])


# In[25]:


s1


# In[26]:


s1= pandas.to_numeric(s1)


# In[27]:


s1


# In[28]:


s1=pandas.Series(['ABC','20','30','MNO'])


# In[29]:


s1


# In[31]:


s1=pandas.to_numeric(s1, errors='coerce')# convert words to null values use coerce in series


# In[32]:


s1


# In[34]:


d= {'Name':['Amit', 'Sumit', 'Carlos'],
            'Age':[30,40,50],
            'Salary':[10000,20000,30000],
            'Amount':[100,200,300]}


# In[35]:


df=pandas.DataFrame(d)


# In[36]:


df


# In[37]:


df.describe()


# In[38]:


df.Amount


# In[39]:


df[(df.Age>40)]


# In[40]:


df[(df.Age>=40)]


# In[41]:


df[(df.Age>=40)].Name # with name


# In[43]:


df[(df.Age>=40) & (df.Salary>20000)]


# In[44]:


df[(df.Age>=40) & (df.Salary>20000)][['Name','Salary']]


# In[45]:


df.tail(1) # fetch last value


# In[46]:


df.head(1) # first value


# In[47]:


# df.columns, df.shape


# In[ ]:


# I want the first name of a person who paid maximun for the training
df=df.sort_value(by='Price', ascending='False').head(1).First_Name # sort the data descending order


# In[ ]:


# df[(df.Price== df.Price.max())].First_Name # maximum valye by firstName


# In[ ]:


# df[(df.Price== df.Price.max())]['First_Name','Last Name']


# In[49]:


d={'empid':[10,20,30],
  'Name':['Carlos','Fernando','Suman']}


# In[50]:


d1={'empid':[10,40,50],
   'dept':['Sales', 'HR', 'HR']}


# In[51]:


df1=pandas.DataFrame(d)


# In[52]:


df2=pandas.DataFrame(d1)


# In[53]:


pandas.merge(df1, df2, on='empid',how='inner')


# In[54]:


pandas.merge(df1, df2, on='empid',how='left')


# In[55]:


pandas.merge(df1, df2, on='empid',how='right')


# In[56]:


pandas.merge(df1, df2, on='empid',how='outer')


# In[60]:


d={'Teams':['India','USA','India','India','USA'],
  'Scores':[10,20,30,40,50]}


# In[59]:


df=pandas.DataFrame(d)


# In[61]:


d={'Teams':['India','USA','India','India','USA'],
  'Scores':[10,20,30,40,50]}


# In[62]:


df=pandas.DataFrame(d)


# In[63]:


df


# In[64]:


g= df.groupby('Teams')


# In[65]:


g.get_group('USA')


# In[66]:


df[(df.Teams=='India')] # same thing as groupby


# In[67]:


df[(df.Teams=='India')].Scores.sum() # total of india scores


# In[68]:


g.sum() # total of boths


# In[ ]:


df=pandas.read_csv(path)# find student_raw.csv
print(df.head)
print(df.dtypes)
print(df.columns)
print(df.shape)
df['percentage']= round((df['Math']+df['Science']+['English'])/3,2)
print(df)
x=groupby['Section']
df1=get_group('One')
df2=get_group('Two')
print(df1)
print(df2)
print(df1[(df1.Maths==df1.max())].Name) # top1 math
print(df2[(df2.English==df2.max)].Name)# top1 english
print(df[(df.percentage==df.percentage.max())].Name)# who have better grades
print(df[(df.Name.str[0]=='A')]) # student the start with letter A      
print(df1[(df1.Maths<40)& (df1.English<40)& (df1.Science<40)]['Name',['Section']])
# all the student who dail class less 40%
print(df[(df.Name.str[-1]==('n')]) # student who finish name with 'n'
print(df[(df.percentage==df.percentage.min())].Name)
print(df[(df['Name'].str.upper().str[-1]==('N')])


# In[ ]:
